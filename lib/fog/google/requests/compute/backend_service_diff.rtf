diff --git a/lib/fog/google/requests/compute/delete_backend_service.rb b/lib/fog/google/requests/compute/delete_backend_service.rb
new file mode 100644
index 0000000..c80bed6
--- /dev/null
+++ b/lib/fog/google/requests/compute/delete_backend_service.rb
@@ -0,0 +1,24 @@
+module Fog
+  module Compute
+    class Google
+      class Mock
+        def delete_backend_service(backend_service_name)
+            Fog::Mock.not_implemented
+        end
+      end
+
+      class Real
+
+        def delete_backend_service(backend_service_name)
+          api_method = @compute.backend_services.delete
+          parameters = {
+            'project' => @project,
+            'backendService' => backend_service_name
+          }
+          result = self.build_result(api_method, parameters)
+          response = self.build_response(result)
+        end
+      end
+    end
+  end
+end
diff --git a/lib/fog/google/requests/compute/get_backend_service.rb b/lib/fog/google/requests/compute/get_backend_service.rb
new file mode 100644
index 0000000..1ab3005
--- /dev/null
+++ b/lib/fog/google/requests/compute/get_backend_service.rb
@@ -0,0 +1,24 @@
+module Fog
+  module Compute
+    class Google
+      class Mock
+        def get_backend_service(service_name)
+          Fog::Mock::not_implemented
+        end
+      end
+ 
+      class Real
+        def get_backend_service(service_name)
+          api_method = @compute.backend_services.get
+          parameters = {
+            'project' => @project,
+            'backendService' => service_name
+          }
+          result = self.build_result(api_method, parameters)
+          response = self.build_response(result)
+        end
+      end
+    end
+  end
+end
+
diff --git a/lib/fog/google/requests/compute/get_backend_service_health.rb b/lib/fog/google/requests/compute/get_backend_service_health.rb
new file mode 100644
index 0000000..e70ea3e
--- /dev/null
+++ b/lib/fog/google/requests/compute/get_backend_service_health.rb
@@ -0,0 +1,27 @@
+module Fog
+  module Compute
+    class Google
+      class Mock
+        def get_backend_service_health(backend_service)
+          Fog::Mock.not_implemented
+        end
+      end
+
+      class Real
+        def get_backend_service_health(backend_service)
+          api_method = @compute.backend_services.get_health
+          parameters = {
+            'project' => @project,
+            'backendService' => backend_service.name
+          }
+         health_results = backend_service.backends.map do |backend|
+           body = { 'group' => backend['group'] }
+            resp = build_response(build_result(api_method, parameters, body_object= body))
+   [backend['group'], resp.data[:body]['healthStatus']]
+         end
+  Hash[health_results]
+        end
+      end
+    end
+  end
+end
diff --git a/lib/fog/google/requests/compute/insert_backend_service.rb b/lib/fog/google/requests/compute/insert_backend_service.rb
new file mode 100644
index 0000000..dce1e7b
--- /dev/null
+++ b/lib/fog/google/requests/compute/insert_backend_service.rb
@@ -0,0 +1,26 @@
+module Fog
+  module Compute
+    class Google
+      class Mock
+        def insert_backend_service(backend_service_name)
+            Fog::Mock.not_implemented
+        end
+      end
+
+      class Real
+        def insert_backend_service(backend_service_name, opts = {})
+          api_method = @compute.backend_services.insert
+          parameters = {
+            'project' => @project
+          }
+          body_object = { 'name' => backend_service_name }
+          body_object.merge!(opts)
+          result = self.build_result(api_method, parameters, body_object=body_object)
+
+          response = self.build_response(result)
+        end
+      end
+    end
+  end
+end
+
diff --git a/lib/fog/google/requests/compute/list_backend_services.rb b/lib/fog/google/requests/compute/list_backend_services.rb
new file mode 100644
index 0000000..4ddd697
--- /dev/null
+++ b/lib/fog/google/requests/compute/list_backend_services.rb
@@ -0,0 +1,24 @@
+module Fog
+  module Compute
+    class Google
+      class Mock
+        def list_backend_services
+          Fog::Mock.not_implemented
+        end
+      end
+
+      class Real
+        def list_backend_services
+          api_method = @compute.backend_services.list
+          parameters = {
+            'project' => @project,
+            
+          }
+
+          result = self.build_result(api_method, parameters)
+          response = self.build_response(result)
+        end
+      end
+    end
+  end
+end
