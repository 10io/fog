#!/usr/bin/env ruby
lib_dir = File.join(File.dirname(__FILE__), '..', 'lib')
require File.join(lib_dir, 'fog')
require 'irb'
require 'yaml'

require File.join(lib_dir, 'fog', 'aws', 'bin')
require File.join(lib_dir, 'fog', 'rackspace', 'bin')
require File.join(lib_dir, 'fog', 'slicehost', 'bin')
require File.join(lib_dir, 'fog', 'terremark', 'bin')

require File.join(lib_dir, 'fog', 'bin')

Fog.credential = (ARGV.first && :"#{ARGV.first}") || :default
unless Fog.credentials
  exit
end

ARGV.clear # Avoid passing args to IRB
IRB.setup(nil)
@irb = IRB::Irb.new(nil)
IRB.conf[:MAIN_CONTEXT] = @irb.context
IRB.conf[:PROMPT][:FOG] = IRB.conf[:PROMPT][:SIMPLE].dup
IRB.conf[:PROMPT][:FOG][:RETURN] = "%s\n"
@irb.context.prompt_mode = :FOG
@irb.context.workspace = IRB::WorkSpace.new(binding)
catch(:IRB_EXIT) { @irb.eval_input }


#   require 'irb'
#   ARGV.clear # Avoid passing args to IRB
#   IRB.setup(nil)
#   @irb = IRB::Irb.new(nil)
#   IRB.conf[:MAIN_CONTEXT] = @irb.context
#   IRB.conf[:PROMPT][:SHINDO] = {}
# end
# for key, value in IRB.conf[:PROMPT][:SIMPLE]
#   IRB.conf[:PROMPT][:SHINDO][key] = "#{@formatador.indentation}#{value}"